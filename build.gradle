apply plugin: 'java'
// Provide convenience executables for trying out the examples.
apply plugin: 'application'
// Generate Visual Studio Code .vscode & .json project files
apply plugin: "visual-studio"

repositories {
    mavenCentral()
    mavenLocal()
    maven {
    	url = System.getenv("GITHUB_DEPLOY_REPOSITORY") ?: System.properties['deploy.repository'] ?: 'https://maven.pkg.github.com'
        credentials {
        	username = System.getenv("GITHUB_DEPLOY_USER") ?: System.properties['deploy.user']
            password = System.getenv("GITHUB_DEPLOY_TOKEN") ?: System.properties['deploy.token'] 
		}
	}
}

sourceCompatibility = 1.11
def grpcVersion = '1.53.0'
def baseVersion = '3.9.4'
def baseGroupId = 'io.github.adempiere'
def customBaseVersion = "adempiere-3.9.4"
dependencies {
    implementation fileTree(
        dir: 'lib',
        include: [
            '*.jar'
        ]
    )

	//	ADempiere Core
	implementation "${baseGroupId}:base:${baseVersion}"
	implementation "${baseGroupId}:point-of-sales:${baseVersion}"
	implementation "${baseGroupId}:store:${baseVersion}"
	implementation "${baseGroupId}:distribution:${baseVersion}"
	implementation "${baseGroupId}:freight:${baseVersion}"
	implementation "${baseGroupId}:store:${baseVersion}"
	implementation "${baseGroupId}:human-resource-and-payroll:${baseVersion}"
	implementation "${baseGroupId}:extend:${baseVersion}"
	implementation "${baseGroupId}:migration:${baseVersion}"
	implementation "${baseGroupId}:asset:${baseVersion}"
	implementation "${baseGroupId}:crm:${baseVersion}"
	implementation "${baseGroupId}:production:${baseVersion}"
	implementation "${baseGroupId}:project:${baseVersion}"
	implementation "${baseGroupId}:request:${baseVersion}"
	implementation "${baseGroupId}:adempiere.test:${baseVersion}"
	implementation "${baseGroupId}:cashflow:${baseVersion}"
	implementation "${baseGroupId}:manufacturing:${baseVersion}"
	implementation "${baseGroupId}:wms:${baseVersion}"
	implementation "${baseGroupId}:openid-authentication:${baseVersion}"
	implementation "${baseGroupId}:investment-and-loan:${baseVersion}"
	implementation "${baseGroupId}:time-and-attendance:${baseVersion}"
	implementation "${baseGroupId}:loan:${baseVersion}"
	implementation "${baseGroupId}:discord-notifier:${baseVersion}"
	implementation "${baseGroupId}:telegram-notifier:${baseVersion}"
	implementation "${baseGroupId}:tools:${baseVersion}"
	implementation "${baseGroupId}:jasperreports:${baseVersion}"
	
	implementation "${baseGroupId}:adempiere-business-processors:1.0.9"
	implementation "${baseGroupId}:adempiere-jwt-token:1.0.2"
	implementation "${baseGroupId}:adempiere-dashboard-improvements:1.0.7"
	implementation "${baseGroupId}:adempiere-pos-improvements:1.0.0"
	implementation "${baseGroupId}:adempiere-kafka-connector:1.0.0"
	// ADempiere External Libraries
	implementation 'com.github.jjYBdx4IL:ecs:1.4.2.1'
	implementation 'org.telegram:telegrambots:6.0.1'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.0.1'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.0'
	implementation 'com.lowagie:itext:2.1.7'
	implementation group: 'org.apache.poi', name: 'poi', version: '3.17'
    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'
    // https://mvnrepository.com/artifact/com.itextpdf/pdfa
	implementation group: 'com.itextpdf', name: 'pdfa', version: '7.1.13'
    // https://mvnrepository.com/artifact/com.itextpdf/itextpdf
    implementation group: 'com.itextpdf', name: 'itextpdf', version: '5.5.2'
	// https://mvnrepository.com/artifact/io.konik/itext-carriage
	implementation group: 'io.konik', name: 'itext-carriage', version: '0.8.0'
    // https://mvnrepository.com/artifact/io.konik/harness
    implementation group: 'io.konik', name: 'harness', version: '1.0.0'
    // https://mvnrepository.com/artifact/com.sun.mail/javax.mail
	implementation group: 'com.sun.mail', name: 'javax.mail', version: '1.4.7'
    // https://mvnrepository.com/artifact/com.jgoodies/looks
	implementation group: 'com.jgoodies', name: 'looks', version: '2.0.4'
    // https://mvnrepository.com/artifact/javaee/javaee-api
	implementation group: 'javaee', name: 'javaee-api', version: '5'
    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.827'
    // https://mvnrepository.com/artifact/org.jfree/jfreechart
	implementation group: 'org.jfree', name: 'jfreechart', version: '1.0.14'
    // https://mvnrepository.com/artifact/commons-io/commons-io
	implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    // https://mvnrepository.com/artifact/commons-validator/commons-validator
	implementation group: 'commons-validator', name: 'commons-validator', version: '1.6'
    // https://mvnrepository.com/artifact/org.apache.activemq/activemq-core
	implementation group: 'org.apache.activemq', name: 'activemq-core', version: '5.7.0'
    // https://mvnrepository.com/artifact/org.apache.ant/ant
	implementation group: 'org.apache.ant', name: 'ant', version: '1.10.5'
    // https://mvnrepository.com/artifact/com.github.lookfirst/sardine
	implementation group: 'com.github.lookfirst', name: 'sardine', version: '5.9'
    // https://mvnrepository.com/artifact/io.vavr/vavr
    implementation group: 'io.vavr', name: 'vavr', version: '0.10.4'
    // https://mvnrepository.com/artifact/net.sourceforge.barbecue/barbecue
	implementation group: 'net.sourceforge.barbecue', name: 'barbecue', version: '1.5-beta1'
    // https://mvnrepository.com/artifact/log4j/log4j
	implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    // https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc6
	implementation group: 'com.oracle.database.jdbc', name: 'ojdbc6', version: '11.2.0.4'
    // https://mvnrepository.com/artifact/com.google.zxing/core
	implementation group: 'com.google.zxing', name: 'core', version: '2.3.0'
    // https://mvnrepository.com/artifact/it.sauronsoftware.cron4j/cron4j
	implementation group: 'it.sauronsoftware.cron4j', name: 'cron4j', version: '2.2.5'
    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.1'
    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.0.4'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.3'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
	implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.3'
    // https://mvnrepository.com/artifact/org.beanshell/bsh
    implementation group: 'org.beanshell', name: 'bsh', version: '2.0b5'
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'src/main/client'
			srcDirs 'src/main/install'
			srcDirs 'src/main/org.adempiere.pos'
			srcDirs 'src/main/org.eevolution.hr_and_payroll'
			srcDirs 'src/main/org.eevolution.manufacturing'
        }
        resources {
            srcDirs 'src/main/client'
			srcDirs 'src/main/install'
            include 'org/compiere/images/**.*'
            include 'org/adempiere/plaf/icons/**.*'
            include 'org/compiere/plaf/sounds/**.*'
            include 'org/compiere/**.*'
            include 'org/compiere/db/**.*'
            include 'org/compiere/install/**.*'  
        }
    }
}

startScripts.enabled = false

ext {
	javaMainClass = "org.adempiere.Adempiere"
}

application {
	// mainClass = javaMainClass
	mainClass.set(javaMainClass)
}
jar {
	manifest {
		attributes(
			"Main-Class": javaMainClass
		)
	}
}

run {
	doFirst {
		if (System.getProperty("PropertyFile")) {
			systemProperty "PropertyFile", System.getProperty("PropertyFile")
		}
	}
}

task ADempiereSwingUIRunner(type: CreateStartScripts) {
	mainClassName = javaMainClass
    applicationName = 'adempiere-swing-ui'
    defaultJvmOpts = Arrays.asList("-DPropertyFile=Adempiere.properties", "-Dorg.adempiere.server.embedded=true")
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtimeClasspath
}

task RunSetup(type: CreateStartScripts) {
    mainClassName = 'org.compiere.install.Setup'
    applicationName = 'run-setup'
    defaultJvmOpts = Arrays.asList("-DPropertyFile=Adempiere.properties")
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtimeClasspath
}

task RunSilentSetup(type: CreateStartScripts) {
    mainClassName = 'org.compiere.install.SilentSetup'
    applicationName = 'run-silent-setup'
    defaultJvmOpts = Arrays.asList("-DPropertyFile=Adempiere.properties")
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtimeClasspath
}

task Translation(type: CreateStartScripts) {
    mainClassName = 'org.compiere.install.Translation'
    applicationName = 'translation'
    defaultJvmOpts = Arrays.asList("-DPropertyFile=Adempiere.properties")
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtimeClasspath
}


task RunMigrateXML(type: CreateStartScripts) {
    mainClassName = 'org.adempiere.process.MigrationLoader'
    applicationName = 'run-migrate'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtimeClasspath
}

applicationDistribution.into('bin') {
	from(ADempiereSwingUIRunner)
	from(RunSetup)
	from(RunSilentSetup)
	from(Translation)
	from(RunMigrateXML)
    fileMode = 0755
}

//	Create release for project
task createRelease(type: Copy) {
   dependsOn build
   from file("$buildDir/distributions/")
   into file("$buildDir/release/")
   doLast {
        file('build/release/')
        	.listFiles({file -> file.isFile()} as FileFilter).sort()
        	.each { File file ->
            ant.checksum file: file
        }
   	}
}
